# Running Quality Gates
name: PR - Static Analysis

# When PR Updated
on:
  pull_request:
    types: [ opened, reopened, synchronize ]
    branches:
      - develop

jobs:
  analysis:
    runs-on: ubuntu-latest

    timeout-minutes: 15
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      # checks all folder directories
      - name: Check All Folder
        run: |
          ls

      # Sets java version
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          distribution: 'zulu'
          java-version: '12.x'
          
      - name: Setup Dart
        uses: dart-lang/setup-dart@v1
        with:
            sdk: 3.1.5

      # Sets flutter version
      - name: flutter setup
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.13.9'

      # run flutter pub get
      - run: flutter pub get

      # run build_runner
      - run: flutter pub run build_runner build --delete-conflicting-outputs

      # Install LCOV
      - name: Install LCOV
        run: |
          sudo apt-get update
          sudo apt-get install -y lcov

      # Static analysis
      - name: Static analysis
        run: |
          flutter analyze
          flutter pub run dart_code_metrics:metrics analyze lib
          flutter pub run dart_code_metrics:metrics analyze test

      - name: Run test coverage
        shell: bash
        run: scripts/test_with_coverage.sh

      # Make puml file (class diagram)
      - name: Make puml file
        run: |
          dart pub global activate dcdg
          export PATH="$PATH":"$HOME/.pub-cache/bin"
          cd domain
          dcdg --search-path=lib/entity --output=../uml/domain_entity.puml --exclude-private=all --exclude="^flutter" --exclude-is-a
          cd ..

      # Make puml to svg file (class diagram)
      - name: Install Dependencies and Make puml to svg file
        run: |
          sudo apt-get install graphviz
          curl -L https://github.com/plantuml/plantuml/releases/download/v1.2023.11/plantuml.jar -o plantuml.jar
          chmod +x plantuml.jar 
          java -jar plantuml.jar -i uml/domain_entity.puml -o ../.github/uml -svg

      # Upload svg file (class diagram)
      - name: Commit Class Diagram File
        uses: EndBug/add-and-commit@v7
        with:
          default_author: github_actions
          message: 'chore: upload class diagram'
          add: '.github/uml/domain_entity.svg'

      - name: Upload LCOV report
        uses: actions/upload-artifact@v2
        with:
          name: lcov-report
          path: coverage/

      - name: Use Node.js to make badge
        uses: actions/setup-node@v3
        with:
          node-version: '12'

      - name: Create coverage badge
        run: |
          npm init -y
          npm install
          npm install lcov2badge
          node scripts/coverage_badge_gen.js

      - name: Commit new badge
        uses: EndBug/add-and-commit@v7
        with:
          default_author: github_actions
          message: 'chore: upload badge'
          add: '.github/badges/coverage_badge.svg'
